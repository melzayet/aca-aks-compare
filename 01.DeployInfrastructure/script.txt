Cloud Native applications deliver a lot of value. Yet, there are lots of moving parts to reach the desired scalability, availability and security goals. In this series, we will start with a high-level architecture, and gradually drill down into different parts of that architecture. You'll be amazed by the number of concepts involved. From compute, networking, into application and security concepts. However, all will be depicted, and incremental, to help you build depth over time.

To follow a Cloud Native approach, one must start with a strong solid foundation, or infrastructure. We need to build scripted & dynamic infrastructure before we can host our apps.

Let's review a sample architecture for reaching that goal.

Building cloud-native infrastructure starts by selecting a scheduler, to run our containerized apps. Sometimes called, an orchestrator. It's typically kubernetes-based. On Azure, we have AKS or Container Apps. We will see both services in more depth, in different episodes of this series.    

As we run our apps, we start seeing a need for backing services. For example, Key Vault to store our secrets, or certificates. Storage Accounts to store any blob content. Also a NoSQL database, like Cosmos DB, for persisting our data.  

All these services, will need permissions to be accessed. We'll create a Managed Identity or MI for that.  

To repeat the deployment of these resources, or tweak their configuration, we need to use "Infrastructure as Code" templates. Bicep is used here but it could have been ARM templates or Terraform. Bicep here is offering the scripted, and repeatable aspect for our infrastructure.

To continuosly deploy template changes, we will use GitHub Actions for that. The templates with be stored in GitHub. GitHub will also need the permissions to manage our Azure infrastructure.

Whether we want to upgrade our kubernetes version, add more secrets, or introduce any change; it's all automated now!

That's it. If you haven't already, please find this episode page in "depicted.cloud" website. You will find some follow-up resources.   Thanks for watching, and stay posted for a coming episode!    