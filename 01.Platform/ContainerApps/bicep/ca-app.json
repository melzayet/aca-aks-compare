{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.12.40.16777",
      "templateHash": "9984220822466206994"
    }
  },
  "parameters": {
    "containerAppName": {
      "type": "string",
      "defaultValue": "todo-aca-cosmos"
    },
    "infraSubnetName": {
      "type": "string",
      "defaultValue": "infra-subnet"
    },
    "containerAppsEnvName": {
      "type": "string"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    }
  },
  "variables": {
    "uniqueSuffix": "[substring(uniqueString(resourceGroup().id), 0, 4)]",
    "databaseName": "todoapp",
    "containerName": "tasks",
    "blobContainerName": "dotnet-data-protection"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-09-01",
      "name": "[replace(format('{0}sa', variables('uniqueSuffix')), '-', '')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot",
        "minimumTlsVersion": "TLS1_2",
        "supportsHttpsTrafficOnly": true
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-02-01",
      "name": "[format('{0}/default/{1}', replace(format('{0}sa', variables('uniqueSuffix')), '-', ''), variables('blobContainerName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', replace(format('{0}sa', variables('uniqueSuffix')), '-', ''))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2022-05-15",
      "name": "[toLower(format('{0}-todo', variables('uniqueSuffix')))]",
      "location": "[parameters('location')]",
      "kind": "GlobalDocumentDB",
      "properties": {
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Eventual"
        },
        "locations": [
          {
            "locationName": "[parameters('location')]",
            "failoverPriority": 0,
            "isZoneRedundant": false
          }
        ],
        "capabilities": [
          {
            "name": "EnableServerless"
          }
        ],
        "virtualNetworkRules": [
          {
            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', split(parameters('infraSubnetName'), '/')[0], split(parameters('infraSubnetName'), '/')[1])]",
            "ignoreMissingVNetServiceEndpoint": false
          }
        ],
        "databaseAccountOfferType": "Standard"
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2022-05-15",
      "name": "[format('{0}/{1}', toLower(format('{0}-todo', variables('uniqueSuffix'))), variables('databaseName'))]",
      "properties": {
        "resource": {
          "id": "[variables('databaseName')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', toLower(format('{0}-todo', variables('uniqueSuffix'))))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2022-05-15",
      "name": "[format('{0}/{1}/{2}', toLower(format('{0}-todo', variables('uniqueSuffix'))), variables('databaseName'), variables('containerName'))]",
      "properties": {
        "resource": {
          "id": "[variables('containerName')]",
          "partitionKey": {
            "paths": [
              "/id"
            ],
            "kind": "Hash"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', toLower(format('{0}-todo', variables('uniqueSuffix'))), variables('databaseName'))]"
      ]
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2022-01-31-preview",
      "name": "[format('{0}-mi', variables('uniqueSuffix'))]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-04-01-preview",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', replace(format('{0}sa', variables('uniqueSuffix')), '-', ''))]",
      "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', replace(format('{0}sa', variables('uniqueSuffix')), '-', '')))]",
      "properties": {
        "roleDefinitionId": "[extensionResourceId(resourceId('Microsoft.Storage/storageAccounts', replace(format('{0}sa', variables('uniqueSuffix')), '-', '')), 'Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-mi', variables('uniqueSuffix'))), '2022-01-31-preview').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', replace(format('{0}sa', variables('uniqueSuffix')), '-', ''))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-mi', variables('uniqueSuffix')))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
      "apiVersion": "2021-05-15",
      "name": "[format('{0}/{1}', toLower(format('{0}-todo', variables('uniqueSuffix'))), '736180af-7fbc-4c7f-9004-22735173c1c3')]",
      "properties": {
        "assignableScopes": [
          "[resourceId('Microsoft.DocumentDB/databaseAccounts', toLower(format('{0}-todo', variables('uniqueSuffix'))))]"
        ],
        "permissions": [
          {
            "dataActions": [
              "Microsoft.DocumentDB/databaseAccounts/readMetadata",
              "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/*",
              "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/*"
            ]
          }
        ],
        "roleName": "[format('{0}-cosmos-rbac', variables('uniqueSuffix'))]",
        "type": "CustomRole"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', toLower(format('{0}-todo', variables('uniqueSuffix'))))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleAssignments",
      "apiVersion": "2021-05-15",
      "name": "[format('{0}/{1}', toLower(format('{0}-todo', variables('uniqueSuffix'))), '736180af-7fbc-4c7f-9004-22735173c1c4')]",
      "properties": {
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-mi', variables('uniqueSuffix'))), '2022-01-31-preview').principalId]",
        "roleDefinitionId": "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions', toLower(format('{0}-todo', variables('uniqueSuffix'))), '736180af-7fbc-4c7f-9004-22735173c1c3')]",
        "scope": "[resourceId('Microsoft.DocumentDB/databaseAccounts', toLower(format('{0}-todo', variables('uniqueSuffix'))))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', toLower(format('{0}-todo', variables('uniqueSuffix'))))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions', toLower(format('{0}-todo', variables('uniqueSuffix'))), '736180af-7fbc-4c7f-9004-22735173c1c3')]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-mi', variables('uniqueSuffix')))]"
      ]
    },
    {
      "type": "Microsoft.App/containerApps",
      "apiVersion": "2022-06-01-preview",
      "name": "[parameters('containerAppName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{2}', subscription().subscriptionId, resourceGroup().name, format('{0}-mi', variables('uniqueSuffix')))]": {}
        }
      },
      "properties": {
        "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', parameters('containerAppsEnvName'))]",
        "configuration": {
          "ingress": {
            "targetPort": 8080,
            "external": true
          },
          "secrets": [
            {
              "name": "blob-endpoint",
              "value": "[format('https://{0}.blob.{1}/{2}/keys', replace(format('{0}sa', variables('uniqueSuffix')), '-', ''), environment().suffixes.storage, variables('blobContainerName'))]"
            },
            {
              "name": "cosmos-endpoint",
              "value": "[format('https://{0}.documents.azure.com:443/', toLower(format('{0}-todo', variables('uniqueSuffix'))))]"
            },
            {
              "name": "mi-client-id",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-mi', variables('uniqueSuffix'))), '2022-01-31-preview').clientId]"
            }
          ]
        },
        "template": {
          "containers": [
            {
              "image": "melzayet/todo-api:v3.2",
              "name": "todo-cosmos",
              "env": [
                {
                  "name": "DataProtectionEndpoint",
                  "secretRef": "blob-endpoint"
                },
                {
                  "name": "DatabaseName",
                  "value": "[variables('databaseName')]"
                },
                {
                  "name": "ContainerName",
                  "value": "[variables('containerName')]"
                },
                {
                  "name": "CosmosEndpoint",
                  "secretRef": "cosmos-endpoint"
                },
                {
                  "name": "AZURE_CLIENT_ID",
                  "secretRef": "mi-client-id"
                }
              ]
            },
            {
              "image": "melzayet/reverseproxy:3000",
              "name": "todo-api-proxy"
            }
          ],
          "scale": {
            "minReplicas": 1
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', toLower(format('{0}-todo', variables('uniqueSuffix'))))]",
        "[resourceId('Microsoft.Storage/storageAccounts', replace(format('{0}sa', variables('uniqueSuffix')), '-', ''))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-mi', variables('uniqueSuffix')))]"
      ]
    },
    {
      "type": "Microsoft.App/containerApps",
      "apiVersion": "2022-06-01-preview",
      "name": "[format('{0}-ui', parameters('containerAppName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', parameters('containerAppsEnvName'))]",
        "configuration": {
          "ingress": {
            "targetPort": 8080,
            "external": true
          }
        },
        "template": {
          "containers": [
            {
              "image": "melzayet/todo-ui:v3.0",
              "name": "todo-ui",
              "env": [
                {
                  "name": "apiEndpoint",
                  "value": "[format('https://{0}/todo', reference(resourceId('Microsoft.App/containerApps', parameters('containerAppName')), '2022-06-01-preview').latestRevisionFqdn)]"
                }
              ]
            },
            {
              "image": "melzayet/reverseproxy:5000",
              "name": "todo-ui-proxy"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.App/containerApps', parameters('containerAppName'))]"
      ]
    }
  ]
}