  apiVersion: secrets-store.csi.x-k8s.io/v1
  kind: SecretProviderClass
  metadata:
    name: azure-kvname-workload-identity # needs to be unique per namespace
    namespace: todo-app
  spec:
    provider: azure
    parameters:
      usePodIdentity: "false"
      useVMManagedIdentity: "false"          
      clientID: "${{ secrets.APP_IDENTITY_CLIENT_ID }}" # Setting this to use workload identity
      tenantId: "${{ secrets.TENANT_ID }}"        # The tenant ID of the key vault
      keyvaultName: ${{ secrets.KV_NAME }}       # Set to the name of your key vault
      cloudName: ""                         # [OPTIONAL for Azure] if not provided, the Azure environment defaults to AzurePublicCloud
    secretObjects:                              # [OPTIONAL] SecretObjects defines the desired state of synced Kubernetes secret objects
      - data:
        - key: CosmosEndpoint                           # data field to populate
          objectName: CosmosEndpoint                        # name of the mounted content to sync; this could be the object name or the object alias
        secretName: CosmosEndpoint                     # name of the Kubernetes secret object
        type: Opaque                              # type of Kubernetes secret object (for example, Opaque, kubernetes.io/tls)     
      - data:      
        - key: DataProtectionEndpoint
          objectName: DataProtectionEndpoint                        # name of the mounted content to sync; this could be the object name or the object alias
        secretName: DataProtectionEndpoint                     # name of the Kubernetes secret object
        type: Opaque
      - data:      
        - key: MiClientID                           # data field to populate
          objectName: MiClientID                        # name of the mounted content to sync; this could be the object name or the object alias
        secretName: MiClientID                     # name of the Kubernetes secret object
        type: Opaque                                                                       