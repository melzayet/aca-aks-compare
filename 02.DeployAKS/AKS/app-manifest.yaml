
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: todo
  namespace: todo-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: todo
  template:
    metadata:
      labels:
        app: todo       
    spec:
      serviceAccountName: todoapp-sa
      automountServiceAccountToken: true
      containers:
      - name: todoapp
        image: "melzayet/todo-api:v0.4"
        env:
          - name: AZURE_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: miclientid
                key: miclientid
          - name: CosmosEndpoint
            valueFrom:
              secretKeyRef:
                name: cosmosendpoint
                key: cosmosendpoint
          - name: DataProtectionEndpoint
            valueFrom:
              secretKeyRef:
                name: dataprotectionendpoint
                key: dataprotectionendpoint
          - name: DatabaseName
            value: "todoapp"
          - name: ContainerName
            value: "tasks" 
        ports:
        - containerPort: 80
        volumeMounts:
        - name: secrets-store01-inline
          mountPath: "/mnt/secrets-store"
          readOnly: true          
      volumes:
        - name: secrets-store01-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "azure-kvname-workload-identity"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: todo-ui
  namespace: todo-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: todo-ui
  template:
    metadata:
      labels:
        app: todo-ui
    spec:      
      serviceAccountName: todoapp-sa
      automountServiceAccountToken: true
      containers:
      - name: todo-ui
        image: "melzayet/todo-ui:v0.3"
        env:
          - name: apiEndpoint
            value: "http://ing-maelzaye.westeurope.cloudapp.azure.com/app/todoitems"
        ports:
        - containerPort: 80
        volumeMounts:
        - name: secrets-store01-inline
          mountPath: "/mnt/secrets-store"
          readOnly: true          
      volumes:
        - name: secrets-store01-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "azure-kvname-workload-identity"        
---   
kind: Service
apiVersion: v1
metadata:
  name: todo
  namespace: todo-app
spec:
  selector:
    app: todo
  type: ClusterIP
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-todo-app
  namespace: todo-app
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  rules:
  - host: ing-maelzaye.westeurope.cloudapp.azure.com
    http:
      paths:
      - path: /app(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: todo
            port:
              number: 80
  ingressClassName: nginx
---
kind: Service
apiVersion: v1
metadata:
  name: todo-ui
  namespace: todo-app
spec:
  selector:
    app: todo-ui
  type: ClusterIP
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-todo-ui
  namespace: todo-app
  annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /      
spec:
  rules:
  - host: ing-maelzaye.westeurope.cloudapp.azure.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: todo-ui
            port:
              number: 80
  ingressClassName: nginx
