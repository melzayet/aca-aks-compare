name: Trigger auto deployment for AKS app deployment

# When this action will be executed
on:
  # Automatically trigger it when detected changes in repo
  push:
    branches: 
      [ main ]

    paths:
      - "01.DeployAKS/AKS/**"
      - ".github/workflows/aks-cluster-setup.yml"


  # Allow manually trigger 
  workflow_dispatch:      

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v3
      
      
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.DEPLOY_IDENTITY_CLIENT_ID }}
          tenant-id: ${{ secrets.TENANT_ID }}
          subscription-id: ${{ secrets.SUBSCRIPTION_ID }}
      
      - name: Install NGINX
        run: |            
            wget https://get.helm.sh/helm-v3.9.3-linux-amd64.tar.gz
            tar xvf helm-v3.9.3-linux-amd64.tar.gz
            sudo mv linux-amd64/helm /usr/local/bin
            rm helm-v3.9.3-linux-amd64.tar.gz
            rm -rf linux-amd64
            helm version
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
            kubectl version --client
            wget https://github.com/Azure/kubelogin/releases/download/v0.0.24/kubelogin-linux-amd64.zip
            unzip kubelogin-linux-amd64.zip
            sudo mv bin/linux_amd64/kubelogin /usr/bin
            az aks get-credentials -g ${{ secrets.AKS_RG }} -n aks-demo
            kubelogin convert-kubeconfig -l azurecli
            helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
            helm repo update
            helm upgrade --install --debug ingress-nginx ingress-nginx/ingress-nginx \
            --version 4.2.5 \
            --namespace ingress \
            --create-namespace \
            --set controller.replicaCount=2 \
            --set controller.metrics.enabled=true \
            --set controller.nodeSelector."kubernetes\.io/os"=linux \
            --set controller.service.annotations."service\.beta\.kubernetes\.io/azure-load-balancer-health-probe-request-path"=/healthz

      - name: Install WIF
        run: |       
            AZURE_TENANT_ID=${{ secrets.TENANT_ID }}
            helm repo add azure-workload-identity https://azure.github.io/azure-workload-identity/charts
            helm repo update
            helm upgrade --install workload-identity-webhook azure-workload-identity/workload-identity-webhook \
              --namespace azure-workload-identity-system \
              --create-namespace \
              --set azureTenantID="${{ secrets.TENANT_ID }}"
            AZURE_SUBSCRIPTION_ID=${{ secrets.SUBSCRIPTION_ID }}
            SERVICE_ACCOUNT_ISSUER=`az aks show --resource-group ${{ secrets.AKS_RG }} --name aks-demo --query "oidcIssuerProfile.issuerUrl" -otsv`
            APPLICATION_OBJECT_ID=${{ secrets.APP_IDENTITY_PRINCIPAL_ID }}
            SERVICE_ACCOUNT_NAMESPACE=todo-app
            SERVICE_ACCOUNT_NAME=todoapp-sa
            APPLICATION_CLIENT_ID=${{ secrets.APP_IDENTITY_CLIENT_ID }}
            cat <<EOF | kubectl apply -f -
            apiVersion: v1
            kind: ServiceAccount
            metadata:
              annotations:
                azure.workload.identity/client-id: ${{ secrets.APP_IDENTITY_CLIENT_ID }}
              labels:
                azure.workload.identity/use: "true"
              name: ${SERVICE_ACCOUNT_NAME}
              namespace: ${SERVICE_ACCOUNT_NAMESPACE}
            EOF

